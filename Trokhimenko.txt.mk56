
00	0E	Ввверх
01	09	9
02	50	С/П
03	53	ПП
04	25	:ПП_25
05	20	PI
06	12	*
07	1D	F COS
08	5C	F x<0
09	17	:метка_Чётный

// Нечётная ветвь (1-й ход калькулятора был угловой, т.е. 1-й ход пользователя боковой)
10	69	П-Х 9
11	53	ПП
12	25	:ПП_25
13	01	1
14	11	-
15	51	БП
16	48	:метка_Победа

// Чётная ветвь (1-й ход калькулятора был боковой, т.е. 1-й ход пользователя угловой)
метка_Чётный:
17	67	П-Х 7
18	53	ПП
19	25	:ПП_25
20	67	П-Х 7
21	53	ПП
22	25	:ПП_25
23	00	0
24	50	С/П


// ПП_25
// ВХОД: входное значение в X. (В первый раз тут передается 1-й ход пользователя).
// ВЫХОД:
// 		Reg9: 1-й ход калькулятора = входной параметр, повернутый на 45 против часовой. (т.е. просто вычитаем 1, и если получилось 0, то заменяем на 8).
//			Этот ход высвечивается на дисплей, и запрашивается ответный ход пользователя.
//		Reg7: ответный ход пользователя.
//		Reg8: 1-й ход калькулятора (из Reg9), повернутый на 180 градусов. (т.е. вычитаем 4, и если получилось неположительное, прибавить 8).
//			Это значение сравнивается с ответным ходом пользователя (из Reg7). Если равны, то вернуть предыдущий ход калькулятора из Reg9.
// 			Если не равны, это значение считается новым ходом калькулятора, его отправляем в Y, а на дисплей выводим 77 - игра выиграна.
//		(Таким образом, калькулятор вторым ходом пытается сходить на противоположную клетку от своего первого хода, если эта клетка не занята; если занята, возвращает свой первый ход)
ПП_25:
25	01	1
26	11	-
27	5E	F x=0
28	30	:метка1
29	08	8
метка1:
30	49	Х-П 9
31	50	С/П
32	47	Х-П 7
33	69	П-Х 9
34	04	4
35	11	-
36	57	F x<>0
37	40	:метка2
38	5C	F x<0
39	42	:метка3
метка2:
40	08	8
41	10	+
метка3:
42	48	Х-П 8
43	67	П-Х 7
44	11	-
45	57	F x<>0
46	51	:метка_Возврат
47	68	П-Х 8
метка_Победа:
48	07	7
49	07	7
50	50	С/П
метка_Возврат:
51	69	П-Х 9
52	52	В/О
