
	Ввверх
	9
	С/П
	ПП
	:ПП_25
	PI
	*
	F COS
	F x<0
	:метка_Чётный

// Нечётная ветвь (1-й ход калькулятора был угловой, т.е. 1-й ход пользователя боковой)
	П-Х 9
	ПП
	:ПП_25
	1
	-
	БП
	:метка_Победа
	
// Чётная ветвь (1-й ход калькулятора был боковой, т.е. 1-й ход пользователя угловой)
метка_Чётный:
	П-Х 7
	ПП
	:ПП_25
	П-Х 7
	ПП
	:ПП_25
	0
	С/П


		// ПП_25
		// ВХОД: входное значение в X. (В первый раз тут передается 1-й ход пользователя).
		// ВЫХОД:
		// 		Reg9: 1-й ход калькулятора = входной параметр, повернутый на 45 против часовой. (т.е. просто вычитаем 1, и если получилось 0, то заменяем на 8).
		//			Этот ход высвечивается на дисплей, и запрашивается ответный ход пользователя.
		//		Reg7: ответный ход пользователя.
		//		Reg8: 1-й ход калькулятора (из Reg9), повернутый на 180 градусов. (т.е. вычитаем 4, и если получилось неположительное, прибавить 8).
		//			Это значение сравнивается с ответным ходом пользователя (из Reg7). Если равны, то вернуть предыдущий ход калькулятора из Reg9.
		// 			Если не равны, это значение считается новым ходом калькулятора, его отправляем в Y, а на дисплей выводим 77 - игра выиграна.
		//		(Таким образом, калькулятор вторым ходом пытается сходить на противоположную клетку от своего первого хода, если эта клетка не занята; если занята, возвращает свой первый ход)
ПП_25:
	1
	-
	F x=0
	:метка1
	8
метка1:
	Х-П 9
	С/П
	Х-П 7
	П-Х 9
	4
	-
	F x<>0
	:метка2
	F x<0
	:метка3
метка2:
	8
	+
метка3:
	Х-П 8
	П-Х 7
	-
	F x<>0
	:метка_Возврат
	П-Х 8
метка_Победа:
	7
	7
	С/П
метка_Возврат:
	П-Х 9
	В/О
